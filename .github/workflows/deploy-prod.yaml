name: Polybot Deploy Prod

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: SSH and deploy to PROD
        run: |
          echo "IMG_NAME=${{ inputs.image }}" > .env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN_PROD }}" >> .env
          echo "BOT_APP_URL=${{ secrets.BOT_APP_URL_PROD }}" >> .env
          echo "YOLO_SERVER_URL=${{ secrets.YOLO_SERVER_URL_PROD }}" >> .env
          echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME_PROD }}" >> .env

          scp -i key.pem -o StrictHostKeyChecking=no .env ubuntu@${{ secrets.POLYBOT_EC2_IP }}:/home/ubuntu/PolybotServicePython/.env

          ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.POLYBOT_EC2_IP }} << 'EOF'
            echo "üìÅ Cloning or updating repo"
            if [ -d "PolybotServicePython" ]; then
              cd PolybotServicePython
              git checkout main
              git pull origin main
            else
              git clone --branch main https://github.com/${{ github.repository }} PolybotServicePython
              cd PolybotServicePython
            fi

            echo "[+] Checking for Docker"
            if ! command -v docker &> /dev/null; then
              echo "üì¶ Installing Docker..."
              curl -fsSL https://get.docker.com -o get-docker.sh
              sh get-docker.sh
              sudo usermod -aG docker $USER
              newgrp docker
            else
              echo "‚úÖ Docker already installed"
            fi

            echo "üê≥ Starting Docker Compose"
            docker compose -f docker-compose.prod.yaml pull
            docker compose -f docker-compose.prod.yaml up -d --remove-orphans

            echo "üîç Verifying OpenTelemetry metrics endpoint"
            if curl -s http://localhost:8889/metrics | grep -q 'system_cpu_time'; then
              echo "‚úÖ OpenTelemetry metrics are exposed"
            else
              echo "‚ö†Ô∏è Metrics not available"
              docker logs $(docker ps -qf "name=otelcol")
            fi
          EOF